<!-- Copyright 2021 Crystal Ferrai
    
     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0
    
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. -->

<UserControl
    x:Class="SwptSaveEditor.Document.SaveDocumentView"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:root="clr-namespace:SwptSaveEditor"
    xmlns:b="clr-namespace:SwptSaveEditor.Behaviors"
    xmlns:c="clr-namespace:SwptSaveEditor.Controls"
    xmlns:u="clr-namespace:SwptSaveEditor.Utils">
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <!-- Tab toolbar -->
        <Border
            Background="#fff8f8f8"
            Padding="4">
            <Border.Resources>
                <Style
                    TargetType="{x:Type Separator}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate
                                TargetType="{x:Type Separator}">
                                <Border
                                    Margin="2 0"
                                    Width="1"
                                    VerticalAlignment="Stretch"
                                    Background="#ffa0a0a0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style
                    x:Key="BorderlessButton"
                    TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </Border.Resources>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                
                <Button
                    ToolTip="Undo (Ctrl+Z)"
                    ToolTipService.ShowOnDisabled="True"
                    Command="{Binding UndoCommand}">
                    <Image
                        Stretch="None"
                        Source="{x:Static root:Images+ToolbarIcons.Undo}"
                        Style="{StaticResource ButtonContentStyle}" />
                </Button>
                
                <Button
                    Grid.Column="2"
                    ToolTip="Redo (Ctrl+Y)"
                    ToolTipService.ShowOnDisabled="True"
                    Command="{Binding RedoCommand}">
                    <Image
                        Stretch="None"
                        Source="{x:Static root:Images+ToolbarIcons.Redo}"
                        Style="{StaticResource ButtonContentStyle}" />
                </Button>

                <Separator
                    Grid.Column="4" />

                <Button
                    Grid.Column="6"
                    ToolTip="Save (Ctrl+S)"
                    ToolTipService.ShowOnDisabled="True"
                    Command="{Binding SaveCommand}">
                    <Image
                        Stretch="None"
                        Source="{x:Static root:Images+ToolbarIcons.Save}"
                        Style="{StaticResource ButtonContentStyle}" />
                </Button>

                <Button
                    Grid.Column="8"
                    ToolTip="Reload from Disk (F5)"
                    ToolTipService.ShowOnDisabled="True"
                    Command="{Binding ReloadCommand}">
                    <Image
                        Stretch="None"
                        Source="{x:Static root:Images+ToolbarIcons.Refresh}"
                        Style="{StaticResource ButtonContentStyle}" />
                </Button>

                <!-- * -->

                <Grid
                    Grid.Column="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="2" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        VerticalAlignment="Center"
                        Text="Filter" />

                    <TextBox
                        x:Name="FilterTextBox"
                        Grid.Column="2"
                        ToolTip="Filter Properties by Name (Ctrl+F)"
                        Text="{Binding PropertyFilter, UpdateSourceTrigger=PropertyChanged}" />

                    <Button
                        Grid.Column="4"
                        ToolTip="Clear Filter (Esc)"
                        ToolTipService.ShowOnDisabled="True"
                        Command="{Binding ClearFilterCommand}"
                        Style="{StaticResource BorderlessButton}">
                        <Image
                            Stretch="None"
                            Source="{x:Static root:Images+ToolbarIcons.CloseAlt}"
                            Style="{StaticResource ButtonContentStyle}" />
                    </Button>

                </Grid>

                <Separator
                    Grid.Column="12" />

                <Button
                    Grid.Column="14"
                    ToolTip="Copy Property (Ctrl+C)"
                    ToolTipService.ShowOnDisabled="True"
                    Command="{Binding CopyPropertyCommand}">
                    <Image
                        Stretch="None"
                        Source="{x:Static root:Images+ToolbarIcons.Copy}"
                        Style="{StaticResource ButtonContentStyle}" />
                </Button>

                <Button
                    Grid.Column="16"
                    ToolTip="Paste Property (Ctrl+V)"
                    ToolTipService.ShowOnDisabled="True"
                    Command="{Binding PastePropertyCommand}">
                    <Image
                        Stretch="None"
                        Source="{x:Static root:Images+ToolbarIcons.Paste}"
                        Style="{StaticResource ButtonContentStyle}" />
                </Button>

                <Separator
                    Grid.Column="18" />

                <Button
                    Grid.Column="20"
                    ToolTipService.ShowOnDisabled="True"
                    Command="{Binding MovePropertyUpCommand}">
                    <Button.Style>
                        <Style
                            TargetType="{x:Type Button}">
                            <Setter Property="ToolTip" Value="Move Property Up (Alt+Up)" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CanMoveProperties}" Value="False">
                                    <Setter Property="ToolBar.ToolTip">
                                        <Setter.Value>
                                            <TextBlock>
                                                <Run Text="Move Property Up (Alt+Up)" /><LineBreak /><Run FontStyle="Italic" Text="Properties must be unsorted and unfiltered" />
                                            </TextBlock>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image
                        Stretch="None"
                        Source="{x:Static root:Images+ToolbarIcons.MoveUp}"
                        Style="{StaticResource ButtonContentStyle}" />
                </Button>

                <Button
                    Grid.Column="22"
                    ToolTipService.ShowOnDisabled="True"
                    Command="{Binding MovePropertyDownCommand}">
                    <Button.Style>
                        <Style
                            TargetType="{x:Type Button}">
                            <Setter Property="ToolTip" Value="Move Property Down (Alt+Down)" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CanMoveProperties}" Value="False">
                                    <Setter Property="ToolBar.ToolTip">
                                        <Setter.Value>
                                            <TextBlock>
                                                <Run Text="Move Property Down (Alt+Down)" /><LineBreak /><Run FontStyle="Italic" Text="Properties must be unsorted and unfiltered" />
                                            </TextBlock>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image
                        Stretch="None"
                        Source="{x:Static root:Images+ToolbarIcons.MoveDown}"
                        Style="{StaticResource ButtonContentStyle}" />
                </Button>

                <Separator
                    Grid.Column="24" />

                <Button
                    Grid.Column="26"
                    ToolTip="Add Property (Ins)"
                    ToolTipService.ShowOnDisabled="True"
                    Command="{Binding AddPropertyCommand}">
                    <Image
                        Stretch="None"
                        Source="{x:Static root:Images+ToolbarIcons.Add}"
                        Style="{StaticResource ButtonContentStyle}" />
                </Button>

                <Button
                    Grid.Column="28"
                    ToolTip="Remove Property (Del)"
                    ToolTipService.ShowOnDisabled="True"
                    Command="{Binding RemovePropertyCommand}">
                    <Image
                        Stretch="None"
                        Source="{x:Static root:Images+ToolbarIcons.Remove}"
                        Style="{StaticResource ButtonContentStyle}" />
                </Button>

            </Grid>
        </Border>
        
        <!-- Tab data -->
        <DataGrid
            Grid.Row="1"
            AutoGenerateColumns="False"
            FontFamily="Courier New"
            CanUserReorderColumns="False"
            CanUserAddRows="False"
            CanUserDeleteRows="False"
            CanUserResizeColumns="True"
            CanUserResizeRows="False"
            SelectionMode="Single"
            SelectionUnit="FullRow"
            HeadersVisibility="Column"
            PreviewKeyDown="DataGrid_PreviewKeyDown"
            b:DataGridBehavior.UseThreeStateSort="True"
            b:DataGridBehavior.IsSaveValueColumn="True"
            Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}"
            ItemsSource="{Binding Properties}"
            SelectedIndex="{Binding SelectedPropertyIndex, Mode=TwoWay}">
            <DataGrid.Resources>
                <u:BindingProxy
                    x:Key="GridBindingProxy"
                    Context="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                <Style
                    x:Key="ReadOnlyColumnStyle"
                    TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="#fff0f0f0" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn
                    Header="Name"
                    Width="Auto"
                    IsReadOnly="True"
                    CellStyle="{StaticResource ReadOnlyColumnStyle}"
                    Binding="{Binding Name}"
                    SortDirection="{Binding Data.NameSortDirection, Source={StaticResource GridBindingProxy}, Mode=TwoWay}" />
                <c:BindingDataGridTemplateColumn
                    Header="Value"
                    Width="*"
                    MinWidth="100"
                    CanUserSort="False"
                    Binding="{Binding Value}"
                    CellTemplateSelector="{x:Static root:SaveValueTemplateSelector.Instance}"
                    CellEditingTemplateSelector="{x:Static root:SaveValueTemplateSelector.EditInstance}" />
                <DataGridTextColumn
                    Header="Type"
                    Width="Auto"
                    IsReadOnly="True"
                    CellStyle="{StaticResource ReadOnlyColumnStyle}"
                    Binding="{Binding Value.DisplayType}"
                    SortDirection="{Binding Data.TypeSortDirection, Source={StaticResource GridBindingProxy}, Mode=TwoWay}" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
